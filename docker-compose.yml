#version: '3'
#services:
#  web:
#    build: .
#    command: python manage.py runserver 0.0.0.0:8000
#    ports:
#      - "8000:8000"
#    volumes:
#      - .:/app
#    env_file:
#      - .env
#
#  celery_worker:
#    build: .
#    command: celery -A setup worker --loglevel=info
#    volumes:
#      - .:/app
#    env_file:
#      - .env




version: "3.8"
services:
  # Django Service
  django:
    build: .
    container_name: django
#    command: >
#      bash -c "python manage.py migrate &&
#               python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/usr/src/app/
    ports:
      - '8000:8000'
    env_file:
      - .env
    depends_on:
      - pgdb
      - redis

  # Celery Service
  celery:
    container_name: celery
    build: .
    command: celery -A setup worker -l INFO & celery -A setup beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/usr/src/app
    env_file:
      - .env
    depends_on:
      - django
      - redis

  # PostgreSQL Database Service
  pgdb:
    image: postgres
    container_name: pgdb
    environment:
      - POSTGRES_DB=web-insigth
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data/

  # Redis Service
  redis:
    container_name: redis
    image: "redis:alpine"

volumes:
  pgdata: